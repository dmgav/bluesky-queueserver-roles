# Input parameters
- set_fact:
    qserver_service_name: "{{ qserver_service_name | default('bluesky-qserver-re-manager') }}"
    beamline_user: "{{ beamline_user | mandatory }}"
    redis_server: "{{ redis_server | default('localhost') }}"
    redis_port: "{{ redis_port | default(60590) }}"
    remove_service: "{{ remove_service | default(false) }}"

- set_fact:
    # services_dir: "/usr/lib/systemd/system"  # Directory where 'redis.service' is located
    services_dir: "/etc/systemd/system"  # Standard directory for services
    services_script_dir: "/opt/bluesky/queueserver/bin"
    redis_addr: "{{ redis_server }}:{{ redis_port }}"

# Paths to files to be installed
- set_fact:
    service_file_path: "{{ services_dir }}/{{ qserver_service_name }}.service"
    script_file_path: "{{ services_script_dir }}/{{ qserver_service_name }}.sh"

- name: "Install and start Bluesky Queue Server RE Manager"
  block:
    - name: "Create directory ''{{ services_script_dir }}'' for bluesky-queueserver-re-manager.sh"
      ansible.builtin.file:
        path: "{{ services_script_dir }}"
        state: directory
        owner: '{{ beamline_user }}'
        group: '{{ beamline_user }}'
        mode: "u=rwx,g=rwx,o-rwx"

    - name: "Generate script '.sh' file from template: '{{ script_file_path }}'"
      ansible.builtin.template:
        src: "bluesky-qserver-re-manager.sh"
        dest: "{{ script_file_path }}"
        owner: '{{ beamline_user }}'
        group: '{{ beamline_user }}'
        mode: "u=rx,g=rx,o-rwx"
      with_items:
        - {"redis_addr": "{{ redis_addr }}"}

    - name: "Generate '.service' file from template: '{{ service_file_path }}'"
      ansible.builtin.template:
          src: "bluesky-qserver-re-manager.service"
          dest: "{{ service_file_path }}"
          owner: root
          group: root
          mode: "u=rw,g=r,o=r"
      with_items:
        - { service_name: "{{ qserver_service_name }}",
            script_path: "{{ script_file_path }}",
            beamline_user: "{{ beamline_user }}" }

    - name: "Start (reload and start) '{{ qserver_service_name }}' service"
      ansible.builtin.systemd:
        daemon_reload: true
        enabled: true
        state: started  # Restarting the service may be unsafe
        name: "{{ qserver_service_name }}"

    - name: "Print the state of '{{ qserver_service_name }}'"
      include_role:
        name: service_display_state
      vars:
        service_name: "{{ qserver_service_name }}"

  when: not remove_service

- name: "Uninstall Bluesky Queue Server RE Manager"
  block:
    - debug:
        msg: "Uninstalling '{{ qserver_service_name }}' service."

    - name: "Stop '{{ qserver_service_name }}' service"
      ansible.builtin.systemd:
        enabled: false
        state: stopped
        name: "{{ qserver_service_name }}"
      ignore_errors: yes

    - name: Remove files
      ansible.builtin.file:
        dest: "{{ item }}"
        state: absent
      loop:
        - "{{ service_file_path }}"
        - "{{ script_file_path }}"

  when: remove_service
